"""Add user roles, add facility

Revision ID: 1083a76796bc
Revises: df1aedef938d
Create Date: 2023-04-29 16:10:59.444846

"""
import sqlalchemy as sa
from alembic import op
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision = "1083a76796bc"
down_revision = "df1aedef938d"
branch_labels = None
depends_on = None


def upgrade() -> None:
    user_role = postgresql.ENUM("admin", "owner", "normal", name="userrole")
    user_role.create(op.get_bind())
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "facility",
        sa.Column("id", sa.Uuid(), nullable=False),
        sa.Column("name", sa.String(), nullable=False),
        sa.Column("description", sa.String(), nullable=True),
        sa.Column("location", sa.String(), nullable=False),
        sa.Column("address", sa.String(), nullable=False),
        sa.Column("public", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), nullable=False),
        sa.Column("updated_at", sa.DateTime(), nullable=False),
        sa.PrimaryKeyConstraint("id", name=op.f("facility_pkey")),
    )
    op.create_table(
        "facility_owners",
        sa.Column("user_id", sa.Uuid(), nullable=False),
        sa.Column("facility_id", sa.Uuid(), nullable=False),
        sa.ForeignKeyConstraint(
            ["facility_id"],
            ["facility.id"],
            name=op.f("facility_owners_facility_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.ForeignKeyConstraint(
            ["user_id"],
            ["users.id"],
            name=op.f("facility_owners_user_id_fkey"),
            ondelete="CASCADE",
        ),
        sa.PrimaryKeyConstraint(
            "user_id", "facility_id", name=op.f("facility_owners_pkey")
        ),
    )
    op.add_column(
        "users",
        sa.Column(
            "role", sa.Enum(name="userrole"), nullable=False, server_default="normal"
        ),
    )
    op.drop_column("users", "is_superuser")
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column(
        "users",
        sa.Column(
            "is_superuser",
            sa.BOOLEAN(),
            autoincrement=False,
            nullable=False,
            server_default="false",
        ),
    )
    op.drop_column("users", "role")
    op.drop_table("facility_owners")
    op.drop_table("facility")
    sa.Enum(name="userrole").drop(op.get_bind(), checkfirst=False)
    # ### end Alembic commands ###
